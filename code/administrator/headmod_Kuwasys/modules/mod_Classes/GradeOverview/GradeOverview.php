<?php

namespace administrator\Kuwasys\Classes;

require_once PATH_INCLUDE . '/Module.php';
require_once __DIR__ . '/../Classes.php';
require_once  PATH_INCLUDE .'/pdf/tcpdf/config/lang/ger.php';
require_once PATH_INCLUDE . '/pdf/tcpdf/tcpdf.php';

class GradeOverview extends \Classes {

	/////////////////////////////////////////////////////////////////////
	//Methods
	/////////////////////////////////////////////////////////////////////

	public function execute($dataContainer) {

		$this->entryPoint($dataContainer);
		try {
			$data = $this->dataFetch();
			$data = $this->dataConvert($data);
			$this->pdfGenerate($data);
		}
		catch (\Exception $e) {
			$this->_logger->log('Error creating the GradeOverview PDF',
				'Notice', Null, json_encode(array('msg' => $e->getMessage())));
			$this->_interface->dieError('Ein Fehler ist beim Erstellen der ' .
				'PDF aufgetreten.');
		}
	}

	/////////////////////////////////////////////////////////////////////
	//Implements
	/////////////////////////////////////////////////////////////////////

	protected function entryPoint($dataContainer) {

		parent::entryPoint($dataContainer);
		$this->initSmartyVariables();
	}

	/**
	 * Fetches the data needed to create the pdf
	 * Only returns the requests with status active.
	 * @return array  The flat array containing the data
	 *                ['<key>' => [
	 *                    'userFullname' => '<full name of user>',
	 *                    'categoryName' => '<name of category of choice>',
	 *                    'gradeName' => '<name of grade the user is in>',
	 *                    'classLabel' => '<name of class the user is in>'
	 *                    'classId' => '<ID of class the user is in>'
	 *                ]]
	 */
	private function dataFetch() {

		try {
			$stmt = $this->_pdo->query(
				'SELECT CONCAT(u.forename, " ", u.name) AS userFullname,
					cc.translatedName AS categoryName, g.ID AS gradeId,
					CONCAT(g.gradelevel, g.label) AS gradeName,
					c.label AS classLabel, c.ID AS classId
				FROM KuwasysUsersInClassesAndCategories uicc
				INNER JOIN KuwasysClasses c
					ON c.ID = uicc.ClassID
					AND c.schoolyearId = @activeSchoolyear
				INNER JOIN KuwasysClassCategories cc ON cc.ID = uicc.categoryId
				INNER JOIN KuwasysUsersInClassStatuses uics
					ON uics.ID = uicc.statusId
					AND uics.name = "active"
				INNER JOIN SystemUsers u ON u.ID = uicc.UserID
				INNER JOIN SystemUsersInGradesAndSchoolyears uigs
					ON uigs.userId = u.ID
					AND uigs.schoolyearId = @activeSchoolyear
				INNER JOIN SystemGrades g ON g.Id = uigs.gradeId
				ORDER BY g.gradelevel, g.label, u.name, cc.ID
			');
			return $stmt->fetchAll(\PDO::FETCH_ASSOC);
		}
		catch (\PDOException $e) {
			$this->_logger->log('Error fetching the active users in classes',
				'Notice', Null, json_encode(array('msg' => $e->getMessage())));
			throw $e;
		}
	}

	private function dataConvert($data) {

		$converted = array();
		foreach($data as $row) {
			$converted[$row['gradeName']][$row['userFullname']][$row['categoryName']][$row['classId']] = $row['classLabel'];
		}
		return $converted;
	}

	private function pdfGenerate($data) {

		$pdf = new \TCPDF(
			PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8',
			false
		);
		$this->pdfMetadataSet($pdf);
		$this->pdfStaticContentSet($pdf);
		$this->pdfContentGenerate($pdf, $data);
		$this->pdfOutput($pdf);
	}

	private function pdfMetadataSet($pdf) {

		$pdf->SetCreator(PDF_CREATOR);
		$pdf->SetAuthor('BaBeSK Autogenerated');
		$pdf->SetTitle('GradeOverview');
		$pdf->SetSubject('GradeOverview');
		$pdf->SetKeywords('');
	}

	private function pdfStaticContentSet($pdf) {

		$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '',
			PDF_FONT_SIZE_MAIN));
		$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
		$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '',
			PDF_FONT_SIZE_DATA));
		$pdf->setFooterData(array(0,0,0), array(0,0,0));
		$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
		$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP,
			PDF_MARGIN_RIGHT);
		$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
		$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
		$pdf->setFontSubsetting(true);
		$pdf->SetFont('helvetica', '', 10, '', true);
		$pdf->setTextShadow($this->_textShadowStyle);
	}

	private function pdfContentGenerate($pdf, $data) {

		foreach($data as $gradeName => $users) {
			$pdf->SetPrintHeader(false);
			$pdf->SetPrintFooter(false);
			$pdf->AddPage();
			$this->_smarty->assign('users', $users);
			$this->_smarty->assign('gradeName', $gradeName);
			$content = $this->_smarty->fetch(
				PATH_SMARTY_TPL . '/pdf/grade-overview.pdf.tpl'
			);
			$pdf->writeHTMLCell(
				0, 0, '', '', $content, 0, 1, 0, true, '', true
			);
		}
	}

	private function pdfOutput($pdf) {

		$name = "klassen-uebersicht.pdf";
		$pdf->output($name, 'I');
	}

	/////////////////////////////////////////////////////////////////////
	//Attributes
	/////////////////////////////////////////////////////////////////////

	private $_textShadowStyle = array(
		'enabled'=>true,
		'depth_w'=>0.2,
		'depth_h'=>0.2,
		'color'=>array(196,196,196),
		'opacity'=>1,
		'blend_mode'=>'Normal'
	);
}

?>