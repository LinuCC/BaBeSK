// Generated by Coffeescript
var App, Button, Col, Icon, NProgress, Panel, React, Row, Settings;

React = require('react');

Button = require('react-bootstrap/lib/Button');

Icon = require('lib/FontAwesomeIcon');

Panel = require('react-bootstrap/lib/Panel');

Row = require('react-bootstrap/lib/Row');

Col = require('react-bootstrap/lib/Col');

NProgress = require('nprogress');

Settings = require('./lib/DisplaySingle/Settings');

App = React.createClass({
  getInitialState: function() {
    return {
      selected: 'settings',
      formData: {
        user: {},
        groups: []
      }
    };
  },
  componentDidMount: function() {
    return this.updateData();
  },
  updateData: function() {
    NProgress.start();
    return $.getJSON('index.php?module=administrator|System|Users', {
      id: window.userId,
      ajax: true
    }).done((function(_this) {
      return function(res) {
        _this.setState({
          formData: res
        });
        return NProgress.done();
      };
    })(this)).fail(function(jqxhr) {
      toastr.error(jqxhr.responseText, 'Fehler beim Abrufen der Daten');
      return NProgress.done();
    });
  },
  patchData: function(data) {
    data['patch'] = true;
    NProgress.start();
    return $.ajax({
      method: 'POST',
      url: 'index.php?module=administrator|System|Users',
      data: data
    }).done((function(_this) {
      return function(res) {
        _this.updateData();
        return NProgress.done();
      };
    })(this)).fail(function(jqxhr) {
      toastr.error(jqxhr.responseText, 'Fehler beim Hochladen der Daten');
      return NProgress.done();
    });
  },
  handleSelectedChange: function(value) {
    if (value !== this.state.selected) {
      NProgress.start();
      this.setState({
        selected: value
      });
      return NProgress.done();
    }
  },
  handleUserChange: function(dataName, data) {
    var dataToPatch;
    dataToPatch = {};
    dataToPatch[dataName] = data;
    dataToPatch['userId'] = this.state.formData.user.id;
    return this.patchData(dataToPatch);
  },
  render: function() {
    return React.createElement("div", null, React.createElement(Row, null, React.createElement("div", {
      "className": 'user-header'
    }, React.createElement("div", null, React.createElement("h4", null, "Pascal Ernst")), React.createElement(Row, {
      "className": 'tabs'
    }, React.createElement("a", {
      "href": '#',
      "onClick": this.handleSelectedChange.bind(null, 'overview')
    }, React.createElement(Icon, {
      "name": "eye",
      "size": "large"
    }), "\u00dcbersicht"), React.createElement("a", {
      "href": '#',
      "onClick": this.handleSelectedChange.bind(null, 'statistics')
    }, React.createElement(Icon, {
      "name": "bar-chart",
      "size": "large"
    }), "Statistiken"), React.createElement("a", {
      "href": '#',
      "onClick": this.handleSelectedChange.bind(null, 'settings')
    }, React.createElement(Icon, {
      "name": "cog",
      "size": "large"
    }), "Einstellungen")))), (this.state.selected === 'overview' ? React.createElement("h3", null, "Sp\u00e4ter :) ") : this.state.selected === 'statistics' ? React.createElement("h3", null, "Sp\u00e4ter :) ") : this.state.selected === 'settings' ? React.createElement(Settings, React.__spread({}, this.state.formData, {
      "onUserChange": this.handleUserChange
    })) : React.createElement("h3", null, "Nichts ausgew\u00e4hlt...")));
  }
});

React.render(React.createElement(App, {
  "userId": window.userId
}), $('#entry')[0]);
