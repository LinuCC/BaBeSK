// Generated by Coffeescript
var Button, Col, Icon, IndexBox, Input, InventoryTable, NProgress, Paginator, Panel, React, Row, Table;

React = require('react');

Button = require('react-bootstrap/lib/Button');

Icon = require('lib/FontAwesomeIcon');

Panel = require('react-bootstrap/lib/Panel');

Row = require('react-bootstrap/lib/Row');

Col = require('react-bootstrap/lib/Col');

Table = require('react-bootstrap/lib/Table');

Input = require('react-bootstrap/lib/Input');

NProgress = require('nprogress');

Paginator = require('lib/Paginator');

IndexBox = React.createClass({
  getInitialState: function() {
    return {
      activePage: 1,
      entriesPerPage: 10,
      pageCount: 1,
      columns: ['id', 'barcode', 'lentUser'],
      displayColumns: ['id', 'barcode', 'lentUser'],
      filter: '',
      sort: '',
      data: []
    };
  },
  componentDidMount: function() {
    return this.updateData();
  },
  updateData: function() {
    NProgress.start();
    return $.getJSON('index.php?module=administrator|Schbas|Inventory&index&ajax', {
      filter: this.state.filter,
      sort: this.state.sort,
      activePage: this.state.activePage,
      entriesPerPage: this.state.entriesPerPage,
      displayColumns: this.state.displayColumns
    }).done((function(_this) {
      return function(res) {
        var stateTemp;
        stateTemp = _this.state;
        stateTemp.data = res.data;
        stateTemp.pageCount = parseInt(res.pageCount);
        _this.setState(stateTemp);
        return NProgress.done();
      };
    })(this)).fail(function(jqxhr) {
      toastr.error(jqxhr.responseText, 'Fehler');
      return NProgress.done();
    });
  },
  handleChangeActivePage: function(pagenum) {
    return this.setState({
      activePage: pagenum
    }, this.updateData);
  },
  handleSearch: function() {
    console.log("res");
    return this.updateData();
  },
  handleFilterChange: function(event) {
    return this.setState({
      filter: event.target.value
    });
  },
  render: function() {
    var searchButton;
    searchButton = React.createElement(Button, {
      "onClick": this.handleSearch
    }, React.createElement(Icon, {
      "name": 'search'
    }));
    return React.createElement(Panel, {
      "className": 'panel-dashboard',
      "header": React.createElement("h4", null, "Inventar \u00dcbersicht")
    }, React.createElement(Row, {
      "className": 'text-center'
    }, React.createElement(Col, {
      "md": 4.
    }, React.createElement(Input, {
      "type": 'text',
      "value": this.state.filter,
      "onChange": this.handleFilterChange,
      "buttonAfter": searchButton
    })), React.createElement(Col, {
      "md": 4.
    }, React.createElement(Paginator, {
      "maxPages": 10.,
      "numPages": this.state.pageCount,
      "onClick": this.handleChangeActivePage
    })), React.createElement(Col, {
      "md": 4.
    })), React.createElement(Row, null, React.createElement(Col, {
      "xs": 12.
    }, React.createElement(InventoryTable, {
      "dataRows": this.state.data,
      "displayColumns": this.state.displayColumns
    }))));
  }
});

InventoryTable = React.createClass({
  getDefaultProps: function() {
    return {
      displayColumns: ['id', 'barcode', 'lentUser'],
      dataRows: []
    };
  },
  render: function() {
    return React.createElement(Table, null, React.createElement("thead", null, React.createElement("tr", null, this.props.displayColumns.map(function(column, index) {
      return React.createElement("th", {
        "key": index
      }, column);
    }))), React.createElement("tbody", null, this.props.dataRows.map((function(_this) {
      return function(row) {
        return React.createElement("tr", {
          "key": row.id
        }, _this.props.displayColumns.map(function(column) {
          return React.createElement("td", null, (row[column] != null ? column === 'lentUser' ? _this.renderLentUser(row[column]) : row[column] : void 0));
        }));
      };
    })(this))));
  },
  renderLentUser: function(data) {
    return React.createElement("a", {
      "href": "index.php?module=administrator|System|Users&id=" + data.id
    }, data.username);
  }
});

React.render(React.createElement(IndexBox, null), $('#entry')[0]);
