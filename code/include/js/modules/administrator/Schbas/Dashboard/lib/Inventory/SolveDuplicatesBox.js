// Generated by Coffeescript
var Alert, Input, ListGroup, ListGroupItem, React, Well;

React = require('react');

Alert = require('react-bootstrap/lib/Alert');

Well = require('react-bootstrap/lib/Well');

Input = require('react-bootstrap/lib/Input');

ListGroup = require('react-bootstrap/lib/ListGroup');

ListGroupItem = require('react-bootstrap/lib/ListGroupItem');

module.exports = React.createClass({
  getDefaultProps: function() {
    return {
      barcodeGroups: [],
      uniqueBarcodes: [],
      onSelectedBookChange: function(groupKey, bookId) {
        return {};
      }
    };
  },
  handleBookSelectChange: function(groupKey, event) {
    var value;
    value = false;
    if (event.target.value !== 'placeholder') {
      value = event.target.value;
    }
    return this.props.onSelectedBookChange(groupKey, value);
  },
  render: function() {
    var hasForAllGroupsSelected;
    hasForAllGroupsSelected = this.props.barcodeGroups.every(function(group) {
      return group.assignedBookId !== false;
    });
    return React.createElement("div", null, (!hasForAllGroupsSelected ? React.createElement(Alert, {
      "bsStyle": 'info'
    }, React.createElement("strong", null, "Mehrdeutige Barcodes!"), React.createElement("p", null, "Bitte w\u00e4hlen sie im folgenden f\u00fcr die jeweiligen Barcodes der\nneuen Exemplare das korrekte Buch aus.")) : React.createElement(Alert, {
      "bsStyle": 'success'
    }, React.createElement("strong", null, "B\u00fccher ausgew\u00e4hlt"), React.createElement("p", null, "Sie k\u00f6nnen nun die neuen Exemplare hinzuf\u00fcgen."))), this.props.barcodeGroups.map((function(_this) {
      return function(group, index) {
        return React.createElement(Well, {
          "key": index
        }, React.createElement(Input, {
          "type": 'select',
          "label": 'Buch',
          "onChange": _this.handleBookSelectChange.bind(null, index),
          "placeholder": 'placeholder'
        }, React.createElement("option", {
          "value": 'placeholder'
        }, "Bitte ausw\u00e4hlen..."), group.books.map(function(book) {
          return React.createElement("option", {
            "value": book.id,
            "key": book.id
          }, book.title);
        })), React.createElement(Input, {
          "label": 'zugeh√∂rige Barcodes'
        }, React.createElement(ListGroup, null, group.barcodes.map(function(barcode) {
          return React.createElement(ListGroupItem, {
            "key": barcode
          }, barcode);
        }))));
      };
    })(this)), React.createElement(Well, null, React.createElement(Input, {
      "label": 'Eindeutige Barcodes'
    }, React.createElement(ListGroup, null, this.props.uniqueBarcodes.map(function(barcodeObj, index) {
      return React.createElement(ListGroupItem, {
        "key": index,
        "bsStyle": 'success'
      }, barcodeObj.barcode);
    })))));
  }
});
