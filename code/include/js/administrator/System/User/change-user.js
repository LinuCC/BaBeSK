// Generated by Coffeescript
var Box, ClassMultiSelect, ClassMultiSelectOption, DATA, Line, classnames;

classnames = require('classnames');

ClassMultiSelectOption = React.createClass({
  render: function() {
    return React.createElement("option", {
      "value": this.props.classData.id
    }, this.props.classData.name);
  }
});

ClassMultiSelect = React.createClass({
  $multiselect: null,
  componentDidMount: function() {
    var that;
    that = this;
    this.$multiselect = $(this.getDOMNode());
    return this.$multiselect.multiselect({
      onChange: function(element, checked) {
        var oldStatus;
        if (!that.handleChange(element, checked)) {
          oldStatus = !checked ? 'select' : 'deselect';
          return that.$multiselect.multiselect(oldStatus, element.val());
        }
      }
    });
  },
  handleChange: function(element, checked) {
    return this.props.onClassChange(element, checked);
  },
  render: function() {
    return React.createElement("select", {
      "className": "kuwasys-classes-multiselect",
      "multiple": true,
      "value": this.props.selectedClasses
    }, this.props.allClasses.map(function(classData) {
      return React.createElement(ClassMultiSelectOption, {
        "key": classData.id,
        "classData": classData
      });
    }, this));
  }
});

Line = React.createClass({
  handleClassChange: function(element, checked) {
    return this.props.onClassChange(element, checked);
  },
  render: function() {
    return React.createElement("div", {
      "className": "row"
    }, React.createElement("label", {
      "className": "col-sm-3 col-md-2 control-label"
    }, this.props.data.schoolyear.label), React.createElement("div", {
      "className": "col-sm-9 col-md-10"
    }, React.createElement(ClassMultiSelect, {
      "allClasses": this.props.data.allClasses,
      "selectedClasses": this.props.data.selected,
      "onClassChange": this.handleClassChange
    })));
  }
});

Box = React.createClass({
  getInitialState: function() {
    var selectedClasses;
    selectedClasses = [];
    this.props.data.map(function(schoolyearData) {
      return $.merge(selectedClasses, schoolyearData.selected);
    });
    return {
      selectedClasses: selectedClasses
    };
  },
  handleClassChange: function(element, checked) {
    var pos;
    if (checked) {
      this.state = React.addons.update(this.state, {
        selectedClasses: {
          $push: [parseInt(element[0].value)]
        }
      });
    } else {
      pos = $.inArray(parseInt(element[0].value), this.state.selectedClasses);
      if (pos !== -1) {
        this.state = React.addons.update(this.state, {
          selectedClasses: {
            $splice: [[pos, 1]]
          }
        });
      }
    }
    return true;
  },
  render: function() {
    return React.createElement("fieldset", null, React.createElement("legend", null, "Kuwasys Kurszuweisungen des Benutzers"), React.createElement("div", {
      "className": "panel panel-default"
    }, React.createElement("ul", {
      "className": "list-group form-horizontal"
    }, this.props.data.map(function(lineData) {
      var className;
      className = classnames({
        "list-group-item": true,
        "list-group-item-success": lineData.schoolyear.isActive
      });
      return React.createElement("li", {
        "className": className
      }, React.createElement(Line, {
        "key": lineData.schoolyear.id,
        "data": lineData,
        "onClassChange": this.handleClassChange
      }));
    }, this)), React.createElement("div", {
      "className": "panel-footer"
    }, React.createElement("a", {
      "href": "#",
      "className": "btn btn-primary"
    }, "Best\u00e4tigen"), React.createElement("div", {
      "className": "clearfix"
    }))));
  }
});

DATA = [
  {
    schoolyear: {
      id: 2,
      label: "2015-2",
      isActive: false
    },
    allClasses: [
      {
        id: 2,
        name: "Datt is Wacken"
      }, {
        id: 5,
        name: "Datt is Schinken"
      }, {
        id: 1,
        name: "Datt is Barsch"
      }, {
        id: 10,
        name: "Datt is DÖNER!!!"
      }
    ],
    selected: [2, 5]
  }, {
    schoolyear: {
      id: 3,
      label: "2015-3",
      isActive: true
    },
    allClasses: [
      {
        id: 2,
        name: "Datt is Wacken"
      }, {
        id: 5,
        name: "Datt is Schinken"
      }, {
        id: 1,
        name: "Datt is Barsch"
      }, {
        id: 10,
        name: "Datt is DÖNER!!!"
      }
    ],
    selected: [1]
  }
];

React.render(React.createElement(Box, {
  "data": DATA
}), $('#additional-settings')[0]);
